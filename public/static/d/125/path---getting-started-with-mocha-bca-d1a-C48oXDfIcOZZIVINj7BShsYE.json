{"data":{"site":{"siteMetadata":{"title":"Steveostudios","author":"@steveostudios"}},"markdownRemark":{"id":"4a048a11-a803-5011-ad71-150f4829a9dc","excerpt":"Testing is one of those things that I have shrugged off for a while. It’s like flossing. I know the benefits. People say that it’s easy. It will make Future…","html":"<p>Testing is one of those things that I have shrugged off for a while. It’s like flossing. I know the benefits. People say that it’s easy. It will make Future-Steve invincible. And, I feel bad about <em>not</em> doing it. It just is one more thing that I am unsure of how to fit into my daily routine. So, with this new project I am working on I decided to do it right from the beginning.</p>\n<p>I’m going to show you how to do some basic testing. Our end goal for this post will be to write a test for the following module:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isValidEmail</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>email <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token regex\">/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w+)+$/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>(Side note: I know that this regular expression is not perfect. There are thousands of these out there and with every one a <em>thousand-and-one critics.</em> That said, we’re gonna write some tests against this function.)</p>\n<p>We’re going to use <a href=\"https://mochajs.org/\" title=\"Mocha\">Mocha</a> for our testing framework. Honestly, to get started I looked for the most popular framework and went with that. I don’t know a whole lot about testing at this point, so I wanted to use something well documented and well used.</p>\n<p>We’re also going to use <a href=\"http://chaijs.com/\" title=\"Chai\">Chai</a>. From my understanding this is a Mocha plugin that just adds some assertions. It’s gonna make our tests more human-discernible.</p>\n<p>Let’s start by installing these:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">npm i mocha -D\nnpm i chai -D</code></pre></div>\n<p>…and open up our new <code class=\"language-text\">test.js</code> file.</p>\n<p>From here, we need to initiate our Javascript file and let it know what it’s supposed to do.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// test/test.js</span>\n<span class=\"token string\">'use strict'</span>\n<span class=\"token keyword\">const</span> chai <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chai'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> login <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../index'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here we are using Chai like a plugin by requiring it. Also, we’re require the file we want to test. Makes sense, right?!</p>\n<p>Okay, now, let’s write our first <code class=\"language-text\">describe</code>. A <code class=\"language-text\">describe</code> tells Mocha how to treat a certain function.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// test/test.js</span>\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#isValidEmail'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// we're going to put our actual test in here.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sweet. Now the first test we want to write is to make sure a “normal looking” email address (like “abc@def.com) ”returns true. So, in the describe let’s add our test (the new stuff is in <strong>bold</strong>).</p>","frontmatter":{"title":"Getting Started with Mocha testing in Javascript","date":"Invalid date"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/getting-started-with-mocha/","previous":{"fields":{"slug":"/local-npm-packages/"},"frontmatter":{"title":"Local NPM Packages"}},"next":{"fields":{"slug":"/git-npm-packages/"},"frontmatter":{"title":"Git NPM Packages"}}}}