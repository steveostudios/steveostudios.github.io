{"version":3,"sources":["webpack:///./src/pages/blog/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/sidebar/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/footer/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","className","map","_ref","node","frontmatter","fields","slug","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","date","_components_footer__WEBPACK_IMPORTED_MODULE_5__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Sidebar","react_default","type","id","htmlFor","gatsby_browser_entry","index_es","icon","href","library","add","faGithub","faDribbble","faMediumM","faVimeoV","faTwitter","faBookOpen","faUserCircle","faHome","faRss","Layout","sidebar","_755544856","Footer","Date","getFullYear"],"mappings":"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","file":"component---src-pages-blog-index-js-2edbbeddf4c630b7a82c.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport Footer from \"../../components/footer\";\n\nimport \"./style.css\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <div className=\"main-container blog-all\">\n          <div className=\"main-contents\">\n            {posts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <div key={node.fields.slug} className=\"post\">\n                  <Link to={node.fields.slug}>\n                    <h1>{title}</h1>\n                    <small>{node.frontmatter.date}</small>\n                  </Link>\n                </div>\n              );\n            })}\n          </div>\n          <Footer />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./style.css\";\n\nconst Sidebar = ({ siteTitle }) => (\n  <div className=\"sidebar\">\n    <div className=\"about\">\n      <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n      <label className=\"menu-icon\" htmlFor=\"menu-btn\">\n        <span className=\"navicon\" />\n      </label>\n      <div className=\"nav nav-full\">\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={[\"fas\", \"home\"]} />\n        </Link>\n        <Link to=\"/about/\">\n          <FontAwesomeIcon icon={[\"fas\", \"user-circle\"]} />\n        </Link>\n        <Link to=\"/books/\">\n          <FontAwesomeIcon icon={[\"fas\", \"book-open\"]} />\n        </Link>\n        <Link to=\"/blog/\">\n          <FontAwesomeIcon icon={[\"fas\", \"rss\"]} />\n        </Link>\n      </div>\n      <h1>\n        <Link to=\"/\">\n          <span>Hi.</span>\n          <span>I'm Steve.</span>\n        </Link>\n        <div className=\"nav nav-mobile\">\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={[\"fas\", \"home\"]} />\n          </Link>\n          <Link to=\"/about/\">\n            <FontAwesomeIcon icon={[\"fas\", \"user-circle\"]} />\n          </Link>\n          <Link to=\"/books/\">\n            <FontAwesomeIcon icon={[\"fas\", \"book-open\"]} />\n          </Link>\n          <Link to=\"/blog/\">\n            <FontAwesomeIcon icon={[\"fas\", \"rss\"]} />\n          </Link>\n        </div>\n      </h1>\n\n      <div className=\"meta\">\n        <h2>\n          <span>Developer.</span>\n          <span>Designer.</span>\n          <span>Youth Worker.</span>\n          <span>Nerd.</span>\n        </h2>\n        <div className=\"details\">\n          <div className=\"social\">\n            <a className=\"twitter\" href=\"https://twitter.com/steveostudios\">\n              <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n            </a>\n            <a className=\"github\" href=\"https://github.com/steveostudios\">\n              <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n            </a>\n            <a className=\"dribbble\" href=\"https://dribbble.com/steveostudios\">\n              <FontAwesomeIcon icon={[\"fab\", \"dribbble\"]} />\n            </a>\n            <a className=\"vimeo\" href=\"https://vimeo.com/steveostudios\">\n              <FontAwesomeIcon icon={[\"fab\", \"vimeo-v\"]} />\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nSidebar.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nSidebar.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Sidebar from \"./sidebar\";\nimport \"./layout.css\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faGithub,\n  faDribbble,\n  faMediumM,\n  faVimeoV,\n  faTwitter\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faBookOpen,\n  faUserCircle,\n  faHome,\n  faRss\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faGithub,\n  faDribbble,\n  faMediumM,\n  faVimeoV,\n  faTwitter,\n  faBookOpen,\n  faUserCircle,\n  faHome,\n  faRss\n);\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Sidebar siteTitle={data.site.siteMetadata.title} />\n        <main> {children} </main>\n      </div>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst Footer = () => <footer>©{new Date().getFullYear()} steveostudios</footer>;\n\nexport default Footer;\n"],"sourceRoot":""}