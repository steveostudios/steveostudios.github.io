{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/2015-05-05-permalinking-muliple-storefronts-in-woocommerce/","webpackCompilationHash":"2caf864dbae689ca3e9c","result":{"data":{"site":{"siteMetadata":{"title":"Steveostudios","author":"@steveostudios"}},"markdownRemark":{"id":"cd91e3a6-2d53-5dc8-80ed-1adb7fb12ec0","excerpt":"I ran into an issue when I was modifying permalinks in Wordpress today. Specifically, I was trying to achieve the effect of creating multiple storefronts on a…","html":"<p>I ran into an issue when I was modifying permalinks in Wordpress today. Specifically, I was trying to achieve the effect of creating multiple storefronts on a Wordpress Woocommerce site using product categories. In order to do that, ideally the urls would look differently than out of the box Wordpress and Woocommerce.</p>\n<h2>The idea</h2>\n<p>Here is how I’d like this to look.</p>\n<ul>\n<li><code class=\"language-text\">http://example.com/store</code> would be the overarching storefront.</li>\n<li><code class=\"language-text\">http://example.com/store/store-name</code> would be an individual store (replacing <em>store-name</em> with the product category name)</li>\n<li><code class=\"language-text\">http://example.com/store/store-name/products/product-name</code> would be an individual product belonging to that store (replacing <em>product-name</em> with the actual product name)</li>\n</ul>\n<p>Unfortunatly, I coudn’t find a way to do this. Things got weird. Everytime I would go to <code class=\"language-text\">http://example.com/store/store-name</code> it would go to the straight to the first product in that category, bypassing the category page altogether.</p>\n<p>I did, however, come up with a second-best workflow that I’m okay with.</p>\n<h2>The solution</h2>\n<ul>\n<li><code class=\"language-text\">http://example.com/stores</code> would be the overarching storefront. Here one can see all of the “stores”.</li>\n<li><code class=\"language-text\">http://example.com/store/store-name</code> would be an individual store (replacing <em>store-name</em> with the product category name)</li>\n<li><code class=\"language-text\">http://example.com/products/store-name/products/product-name</code> would be an individual product belonging to that store (replacing <em>product-name</em> with the actual product name)</li>\n</ul>\n<p>I did this by changing the following:</p>\n<ul>\n<li>\n<p>Pages > Store page</p>\n<ul>\n<li>Permalink to <code class=\"language-text\">http://example.com/stores</code></li>\n</ul>\n</li>\n<li>\n<p>WooCommerce > Settings > Products > Display</p>\n<ul>\n<li>Shop Page Display: Show categories &#x26; subcategories</li>\n</ul>\n</li>\n<li>\n<p>Settings > Permalinks</p>\n<ul>\n<li>Product category base: <code class=\"language-text\">&quot;store&quot;</code></li>\n<li>Custom base: <code class=\"language-text\">&quot;/products/%product_cat%&quot;</code></li>\n</ul>\n</li>\n</ul>\n<p>That seemed to do the trick!</p>","frontmatter":{"title":"Permalinking Muliple Storefronts in WooCommerce","date":"May 05, 2015","tags":["wordress"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2015-05-05-permalinking-muliple-storefronts-in-woocommerce/","previous":{"fields":{"slug":"/2015-05-02-top-3-kramdown-extras/"},"frontmatter":{"title":"Top 3 Kramdown extras"}},"next":{"fields":{"slug":"/2015-05-06-flushing-wp-rewrite-rules/"},"frontmatter":{"title":"Flushing WP Rewrite Rules"}}}}}