{"version":3,"sources":["webpack:///./src/templates/books.js"],"names":["BooksTemplate","books","useStaticQuery","allBooksJson","nodes","booksByYear","filter","book","dateFinish","sort","a","b","Date","reduce","acc","cur","console","log","getFullYear","className","progress","map","key","id","fluid","image","childImageSharp","alt","title","style","width","pages","Object","entries","reverse","year","length"],"mappings":"qNAuGeA,UAhGO,WACpB,IAwBMC,EAxBOC,yBAAe,cAwBTC,aAAaC,MAE1BC,EAAcJ,EACjBK,QAAO,SAACC,GAAD,OAAUA,EAAKC,cACtBC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKD,EAAEH,YAAc,IAAII,KAAKF,EAAEF,eACnDK,QAAO,SAACC,EAAKC,GAMZ,OALAC,QAAQC,IAAIH,EAAIC,EAAG,aACnBD,EAAI,IAAIF,KAAKG,EAAG,YAAgBG,eAAhC,sBACMJ,EAAI,IAAIF,KAAKG,EAAG,YAAgBG,gBAAkB,IADxD,CAEEH,IAEKD,IACN,IAEL,OACE,kBAAC,IAAD,KACE,wBAAIK,UAAU,SACZ,4BACE,iDACA,wBAAIA,UAAU,cACXlB,EACEK,QAAO,SAACC,GAAD,OAAUA,EAAKa,YACtBd,QAAO,SAACC,GAAD,OAAWA,EAAKC,cACvBa,KAAI,SAACd,GAAD,OACH,wBAAIe,IAAKf,EAAKgB,GAAIJ,UAAU,QAC1B,kBAAC,IAAD,CACEK,MAAOjB,EAAKkB,MAAMC,gBAAgBF,MAClCG,IAAKpB,EAAKqB,QAEZ,yBAAKT,UAAU,gBACb,0BACEU,MAAO,CACLC,MAAcvB,EAAKa,SAAWb,EAAKwB,MAA5B,IAAqC,cAQ3DC,OAAOC,QAAQ5B,GACb6B,UACAb,KAAI,gBAAEc,EAAF,KAAQlC,EAAR,YACH,wBAAIqB,IAAKa,EAAMhB,UAAU,QACvB,4BACGgB,EACD,uCAAalC,EAAMmC,QACnB,sCACQ,IACLnC,EACEoB,KAAI,SAACd,GAAD,OAAUA,EAAKwB,SACnBlB,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,OAGlC,wBAAII,UAAU,cACXlB,EAAMoB,KAAI,SAACd,GAAD,OACT,wBAAIe,IAAKf,EAAKgB,GAAIJ,UAAU,QAC1B,kBAAC,IAAD,CACEK,MAAOjB,EAAKkB,MAAMC,gBAAgBF,MAClCG,IAAKpB,EAAKqB","file":"component---src-templates-books-js-bc8076efc68e4b111edd.js","sourcesContent":["import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\n// import BookList from \"../components/book-list\";\nimport Img from \"gatsby-image\";\nimport \"./books.css\";\n\nconst BooksTemplate = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allBooksJson(sort: { fields: dateFinish, order: DESC }) {\n        nodes {\n          dateFinish\n          subtitle\n          progress\n          pages\n          id\n          title\n          author\n          url\n          image {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const books = data.allBooksJson.nodes;\n\n  const booksByYear = books\n    .filter((book) => book.dateFinish)\n    .sort((a, b) => new Date(b.dateFinish) - new Date(a.dateFinish))\n    .reduce((acc, cur) => {\n      console.log(acc[cur[\"dateFinish\"]]);\n      acc[new Date(cur[\"dateFinish\"]).getFullYear()] = [\n        ...(acc[new Date(cur[\"dateFinish\"]).getFullYear()] || []),\n        cur,\n      ];\n      return acc;\n    }, {});\n\n  return (\n    <Layout>\n      <ul className=\"books\">\n        <li>\n          <h5>Currently Reading</h5>\n          <ul className=\"books-year\">\n            {books\n              .filter((book) => book.progress)\n              .filter((book) => !book.dateFinish)\n              .map((book) => (\n                <li key={book.id} className=\"book\">\n                  <Img\n                    fluid={book.image.childImageSharp.fluid}\n                    alt={book.title}\n                  />\n                  <div className=\"progress-bar\">\n                    <span\n                      style={{\n                        width: 100 * (book.progress / book.pages) + \"%\",\n                      }}\n                    />\n                  </div>\n                </li>\n              ))}\n          </ul>\n        </li>\n        {Object.entries(booksByYear)\n          .reverse()\n          .map(([year, books]) => (\n            <li key={year} className=\"year\">\n              <h5>\n                {year}\n                <span>books {books.length}</span>\n                <span>\n                  pages{\" \"}\n                  {books\n                    .map((book) => book.pages)\n                    .reduce((acc, cur) => acc + cur)}\n                </span>\n              </h5>\n              <ul className=\"books-year\">\n                {books.map((book) => (\n                  <li key={book.id} className=\"book\">\n                    <Img\n                      fluid={book.image.childImageSharp.fluid}\n                      alt={book.title}\n                    />\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </Layout>\n  );\n};\n\nexport default BooksTemplate;\n"],"sourceRoot":""}